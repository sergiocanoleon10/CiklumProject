package com.game.rockpaperscissors;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.Random;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class GameServlet extends HttpServlet {

    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("text/html;charset=UTF-8");
        PrintWriter out = response.getWriter();
        try {

        PlayGame();
        } finally {
            out.close();
        }
    }

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }
    public int PlayGame() {
		HandOptions firstPlayer = getRandomOption();
		HandOptions secondPlayer = HandOptions.ROCK;
		
		int result;
		
		RoundGame round = new RoundGame();
		result = round.winner(firstPlayer);
		System.out.println(firstPlayer.getOption());
		System.out.println(secondPlayer.getOption());
		switch (result) {
			
			case -1:
				result = 2; //Gamer 2 win
				break;
			
			case 0:
				result = 0; //Tie
				break;
				
			case 1:
				result = 1; //Gamer 1 win
				break;
		}
		System.out.println(result);
		return result;
	}
    public static HandOptions getRandomOption() {
		HandOptions[] values = HandOptions.values();
		int length = values.length;
		return values[new Random().nextInt(length)];
	}

}